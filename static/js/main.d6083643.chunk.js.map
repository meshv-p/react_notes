{"version":3,"sources":["MyCompo/Navbar.js","MyCompo/Article.js","MyCompo/About.js","MyCompo/Footer.js","MyCompo/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","type","id","tabIndex","onClick","setmode","htmlFor","placeholder","Article","useState","input","setInput","Alert","setAlert","style","backgroundColor","height","role","value","onChange","event","target","l","length","console","log","rows","disabled","u","document","getElementById","toUpperCase","toLowerCase","f","prompt","includes","r","c","replace","alert","navigator","clipboard","writeText","newText","split","join","filter","element","About","Footer","Home","noValidate","for","required","selected","App","setMode","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d6083643.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">TextUtils</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/article\">TextUtils</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/footer\">Footer</Link>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\" tabIndex=\"-1\" >About</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <div className=\"form-check form-switch \">\r\n                                    <input className=\"form-check-input mt-2 \" onClick={props.setmode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                                    <label className=\"form-check-label nav-link\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function Article(props) {\r\n    const [input, setInput] = useState('');\r\n    const [Alert, setAlert] = useState(\"Welcome to TextUtils.\");\r\n\r\n\r\n    var onchange = (event) => {\r\n        setInput(event.target.value);\r\n        var l = input.length;\r\n        console.log(l);\r\n    }\r\n    var Upper = () => {\r\n        var txt = document.getElementById('txt').value;\r\n        var u = txt.toUpperCase();\r\n        setInput(u);\r\n        setAlert('Your text has been converted into Upper case successfully.');\r\n\r\n        // console.log(u);\r\n    }\r\n    var Lower = () => {\r\n        var txt = document.getElementById('txt').value;\r\n        var u = txt.toLowerCase();\r\n        setInput(u);\r\n        setAlert('Your text has been converted into Lower case successfully.');\r\n        // console.log(u);\r\n    }\r\n    var Replace = () => {\r\n        var f = prompt('Which word you want to changed?/find');\r\n        console.log(f);\r\n        console.log(input.includes(f));\r\n        if (input.includes(f)) {\r\n            var r = prompt('what word to be replaced?/Replace');\r\n            console.log(r);\r\n            var c = input.replace(f, r);\r\n            console.log(c);\r\n            setInput(c);\r\n            setAlert(`Your ${f} has been replcaed ${r} successfully.`)\r\n        }\r\n        else {\r\n            alert(`Your ${f} is not in this.`);\r\n            setAlert(`Your ${f} is not in this.`);\r\n        }\r\n    }\r\n    var Clear = () => {\r\n        setInput(\"\");\r\n        setAlert('Clear Text has been successfully.');\r\n    }\r\n    var Copy = () => {\r\n        navigator.clipboard.writeText(input);\r\n        setAlert('Your text has been copied.');\r\n    }\r\n    var Space = () => {\r\n        let newText = input.split(/[ ]+/);\r\n        setInput(newText.join(\" \"));\r\n        setAlert('Remove Extra space has been Removed successfully.');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`text-${props.mode === \"light\" ? 'dark' : \"light\"}  `} style={{backgroundColor : `${props.mode === 'light'? 'white':'#485460'}` , height : '100vh'}}>\r\n            <div className=\"alert alert-success alert-dismissible fade show mb-0\" role=\"alert\">\r\n                <strong>{Alert}</strong>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n                <div className=\"container \">\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label m-lg-1\">Your Text:</label>\r\n                        <textarea className={`form-control text-${props.mode === \"light\" ? 'dark' : \"light\"}`} style={{backgroundColor : `${props.mode === 'light'? 'white':'#485460'}`}} value={input} placeholder=\"Type here...\" onChange={onchange} id=\"txt\" type=\"text\" rows=\"3\"></textarea>\r\n                    </div>\r\n                    <button className=\"btn btn-outline-success mx-2\" disabled={input.length === 0} type=\"submit\" onClick={Upper}>UpperCase</button>\r\n                    <button className=\"btn btn-outline-primary mx-2\" disabled={input.length === 0} type=\"submit\" onClick={Lower}>LowerCase</button>\r\n                    <button className=\"btn btn-outline-danger mx-2 \" disabled={input.length === 0} type=\"submit\" onClick={Replace}>Find & Replace</button>\r\n                    <button className=\"btn btn-outline-warning mx-2\" disabled={input.length === 0} type=\"submit\" onClick={Copy}>Copy Text</button>\r\n                    <button className=\"btn btn-outline-info  mx-2\" disabled={input.length === 0} type=\"submit\" onClick={Clear}>Clear Text</button>\r\n                    <button className=\"btn btn-outline-secondary mx-2\" disabled={input.length === 0} type=\"submit\" onClick={Space}>Remove Extra spaces</button>\r\n\r\n\r\n\r\n                    <div className=\"container mt-lg-4\">\r\n                        <h2 className=\"text-start m-lg-1\">Preview:</h2>\r\n                        <span className=\"mx-lg-5 border-bottom border-dark\" id=\"preview\">{input.length > 0 ? input : \"Nothing to show here\"}</span>\r\n                        <div className=\"mt-1\">\r\n                            <span><b>Total Word:</b></span>\r\n                            <span id=\"word\"> {input.length} Words</span>\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                            <span><b>Total Characters:</b></span>\r\n                            <span id=\"length\"> {input.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Word</span>\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                            <span><b>Time For Reading:</b></span>\r\n                            <span id=\"time\"> {0.008 * input.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Minutes</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div className={`text-${props.mode === \"light\" ? 'dark' : \"light\"}`} style={{ backgroundColor: `${props.mode === 'light' ? 'white' : '#485460'}`,height : '100vh' }}>\r\n            <div className=\"container\" style={{ backgroundColor: `${props.mode === 'light' ? 'white' : '#485460'}` }}>\r\n                <div className=\"accordion \" id=\"accordionExample\">\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button className={`accordion-button accordion bg-${props.mode}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                What We offer to you?\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className={`accordion-collapse collapse show accordion bg-${props.mode}`} aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className={`accordion-button accordion bg-${props.mode}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                What you will get?\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className={`accordion-collapse collapse bg-${props.mode}`} aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button className={`accordion-button accordion bg-${props.mode}` } type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                Who we are?\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className={`accordion-collapse collapse bg-${props.mode}`} aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <div className={`text-${props.mode === \"light\" ? 'light' : \"dark\"} `}>\r\n                <p>This is footer</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <div style={{ backgroundColor: `${props.mode === 'light' ? 'white' : '#485460'}`, height : '100vh' }}>\r\n    <div className={`container text-${props.mode === \"light\" ? 'dark' : \"light\"} h-100 my-3 `} >\r\n      <form className=\"row g-3 needs-validation\" noValidate >\r\n        <div className=\"col-md-4\">\r\n          <label for=\"validationCustom01\" className=\"form-label\">First name</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"validationCustom01\" value=\"Mark\" required />\r\n          <div className=\"valid-feedback\">\r\n            Looks good!\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <label for=\"validationCustom02\" className=\"form-label\">Last name</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"validationCustom02\" value=\"Otto\" required />\r\n          <div className=\"valid-feedback\">\r\n            Looks good!\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <label for=\"validationCustomUsername\" className=\"form-label\">Username</label>\r\n          <div className=\"input-group has-validation\">\r\n            <span className=\"input-group-text\" id=\"inputGroupPrepend\">@</span>\r\n            <input type=\"text\" className=\"form-control\" id=\"validationCustomUsername\" aria-describedby=\"inputGroupPrepend\" required />\r\n            <div className=\"invalid-feedback\">\r\n              Please choose a username.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <label for=\"validationCustom03\" className=\"form-label\">City</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"validationCustom03\" required />\r\n          <div className=\"invalid-feedback\">\r\n            Please provide a valid city.\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <label for=\"validationCustom04\" className=\"form-label\">State</label>\r\n          <select className=\"form-select\" id=\"validationCustom04\" required>\r\n            <option selected disabled value=\"\">Choose...</option>\r\n            <option>...</option>\r\n          </select>\r\n          <div className=\"invalid-feedback\">\r\n            Please select a valid state.\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <label for=\"validationCustom05\" className=\"form-label\">Zip</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"validationCustom05\" required />\r\n          <div className=\"invalid-feedback\">\r\n            Please provide a valid zip.\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required />\r\n            <label className=\"form-check-label\" for=\"invalidCheck\">\r\n              Agree to terms and conditions\r\n            </label>\r\n            <div className=\"invalid-feedback\">\r\n              You must agree before submitting.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <button className=\"btn btn-primary\" type=\"submit\">Submit form</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './MyCompo/Navbar';\nimport Article from './MyCompo/Article';\nimport About from './MyCompo/About';\nimport Footer from './MyCompo/Footer';\nimport React, { useState } from 'react'\nimport Home from './MyCompo/Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const setMode1 = ()=>{\n      if(mode === 'light'){\n          setMode('dark');\n      }\n      else{\n          setMode('light');\n      }\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar mode={mode} setmode={setMode1}/>\n        <Switch>\n          <Route path=\"/article\">\n            <Article mode={mode} />\n          </Route>\n          <Route path=\"/footer\">\n            <Footer mode={mode}/>\n          </Route>\n          <Route path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route path=\"/\">\n            <Home mode={mode}/>\n          </Route>\n        </Switch>\n      </Router>\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}